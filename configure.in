dnl Process this file with autoconf to produce a configure script.
AC_PREREQ(2.57)

m4_define([tomoe_major_version], [0])
m4_define([tomoe_minor_version], [4])
m4_define([tomoe_micro_version], [0])
m4_define([tomoe_version],
          [tomoe_major_version.tomoe_minor_version.tomoe_micro_version])

AC_INIT(tomoe, [tomoe_version])
AM_INIT_AUTOMAKE(tomoe, [tomoe_version])
AM_CONFIG_HEADER(config.h)

AC_ENABLE_SHARED(yes)
AC_ENABLE_STATIC(no)
AM_PROG_LIBTOOL

TOMOE_VERSION=tomoe_version
AC_SUBST(TOMOE_VERSION)

LT_VERSION_INFO="1:0:1"
LIBTOOL_EXPORT_OPTIONS='-export-symbols-regex "^[[^_]].*"'
AC_SUBST(LT_VERSION_INFO)
AC_SUBST(LIBTOOL_EXPORT_OPTIONS)


dnl **************************************************************
dnl Checks for programs.
dnl **************************************************************
AC_PROG_CXX
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_AWK


if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \	]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac

  case " $CFLAGS " in
  *[\ \	]-Wmissing-declarations[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wmissing-declarations" ;;
  esac

  case " $CFLAGS " in
  *[\ \	]-Wmissing-prototypes[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wmissing-prototypes" ;;
  esac

  case " $CFLAGS " in
  *[\ \	]-Wpointer-arith[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wpointer-arith" ;;
  esac

  case " $CFLAGS " in
  *[\ \	]-Wcast-align[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wcast-align" ;;
  esac

  if test "x$enable_ansi" = "xyes"; then
    case " $CFLAGS " in
    *[\ \	]-ansi[\ \	]*) ;;
    *) CFLAGS="$CFLAGS -ansi" ;;
    esac

    case " $CFLAGS " in
    *[\ \	]-pedantic[\ \	]*) ;;
    *) CFLAGS="$CFLAGS -pedantic" ;;
    esac
  fi
fi

dnl **************************************************************
dnl Checks for pkgconfig
dnl **************************************************************

PKG_PROG_PKG_CONFIG()

dnl **************************************************************
dnl Checks for gtk-doc
dnl **************************************************************

GTK_DOC_CHECK([1.4])

dnl **************************************************************
dnl Checks for xsltproc
dnl **************************************************************

AC_PATH_PROG(XSLTPROC, xsltproc, none)

dnl **************************************************************
dnl Checks for rxp
dnl **************************************************************

AC_PATH_PROG(RXP, rxp, none)

dnl **************************************************************
dnl Checks for libraries.
dnl **************************************************************
# FIXME: Replace `main' with a function in `-le':
AC_CHECK_LIB([e], [main])
# FIXME: Replace `main' with a function in `-links':
AC_CHECK_LIB([inks], [main])


dnl **************************************************************
dnl Checks for header files.
dnl **************************************************************
AC_HEADER_STDC
AC_CHECK_HEADERS([fcntl.h libintl.h stdlib.h string.h unistd.h])


dnl **************************************************************
dnl Checks for typedefs, structures, and compiler characteristics.
dnl **************************************************************
AC_C_CONST


dnl **************************************************************
dnl Checks for library functions.
dnl **************************************************************
AC_CHECK_FUNCS([setlocale strchr strtol uname memmove strerror])

dnl **************************************************************
dnl Check for GLib.
dnl **************************************************************
AM_PATH_GLIB_2_0(2.4.0, [], [], [gmodule gobject])
AC_PATH_PROG(GLIB_MKENUMS, glib-mkenums)

dnl **************************************************************
dnl Check for Hyper Estraier.
dnl **************************************************************

est_exists=no
PKG_CHECK_MODULES(EST, hyperestraier,
                  [est_exists=yes], [est_exists=no])
AM_CONDITIONAL([WITH_EST], [test "$est_exists" = "yes"])

dnl **************************************************************
dnl Check for neon.
dnl **************************************************************

neon_exists=no
PKG_CHECK_MODULES(NEON, neon, [neon_exists=yes], [neon_exists=no])
AM_CONDITIONAL([WITH_NEON], [test "$neon_exists" = "yes"])

dnl **************************************************************
dnl Configure for configuration.
dnl **************************************************************

confdir="${sysconfdir}/\$(PACKAGE)"
AC_SUBST(confdir)

dnl **************************************************************
dnl Configure for data.
dnl **************************************************************

datadir="${datadir}/\$(PACKAGE)"

dict_datadir="${datadir}/dict"
AC_SUBST(dict_datadir)

recognizer_datadir="${datadir}/recognizer"
AC_SUBST(recognizer_datadir)

dnl **************************************************************
dnl Bindings: Check for Ruby.
dnl **************************************************************
ruby_available="no"
AC_ARG_WITH([ruby],
            AS_HELP_STRING([--with-ruby=PATH],
                           [Ruby interpreter path (default: auto-detect)]),
            [RUBY="$withval"])

if test "$RUBY" = "no"; then
  : # ignore
elif test "$RUBY" = ""; then
  AC_PATH_PROG(RUBY, ruby, none)
  if test "$RUBY" != "none"; then
    ruby_available="yes"
  fi
else
  AC_CHECK_FILE([$RUBY],
                [ruby_available="yes"],
                [AC_MSG_WARN([$RUBY is not found. Disable Ruby extension.])])
fi

if test "$ruby_available" = "yes"; then
  rbconfig="$RUBY -rrbconfig -e "

  changequote(<<, >>)
  for var_name in archdir sitearchdir CFLAGS LIBRUBYARG libdir \
                  sitelibdir sitearchdir; do
    rbconfig_tmp=`$rbconfig "print Config::CONFIG['$var_name']"`
    eval "rbconfig_$var_name=\"$rbconfig_tmp\""
  done
  changequote([, ])

  RUBY_CFLAGS="$RUBY_CFLAGS -I$rbconfig_archdir "
  RUBY_CFLAGS="$RUBY_CFLAGS -I$rbconfig_sitearchdir "
  RUBY_CFLAGS="$RUBY_CFLAGS $rbconfig_CFLAGS "
  RUBY_LIBS="$rbconfig_LIBRUBYARG"
  RUBY_LDFLAGS="-L$rbconfig_libdir"

  AC_SUBST(RUBY_CFLAGS)
  AC_SUBST(RUBY_LIBS)
  AC_SUBST(RUBY_LDFLAGS)

  _SAVE_CFLAGS=$CFLAGS
  ruby_undef_package_macros="
#undef PACKAGE_NAME
#undef PACKAGE_TARNAME
#undef PACKAGE_STRING
#undef PACKAGE_VERSION
"
  ruby_disable_message="Disable Ruby extension."
  CFLAGS="$CFLAGS $RUBY_CFLAGS"
  AC_CHECK_HEADERS(ruby.h, [],
                   [ruby_available="no"
                    AC_MSG_WARN([$ruby_disable_message])],
                   [$ruby_undef_package_macros])
  if test "x$ruby_available" = "xyes"; then
    CFLAGS="$CFLAGS $GLIB_CFLAGS"
    AC_CHECK_HEADERS(rbgobject.h, [],
		     [ruby_available="no"
		      AC_MSG_WARN([$ruby_disable_message])],
		     [$ruby_undef_package_macros])
  fi
  CFLAGS=$_SAVE_CFLAGS

  AC_MSG_CHECKING([where to install Ruby extensions])
  AC_CACHE_VAL([tomoe_cv_ruby_archdir],
		 [tomoe_cv_ruby_archdir="$rbconfig_sitearchdir"])
  AC_ARG_WITH([ruby-extdir],
                AC_HELP_STRING([--with-ruby-extdir=EXTDIR],
                               [install Ruby bindings in EXTDIR
                                (default is same as ruby's one)]),
                [tomoe_ruby_extdir="$withval"],
                [tomoe_ruby_extdir="$tomoe_cv_ruby_archdir"])
  ruby_extdir="$tomoe_ruby_extdir"
  AC_MSG_RESULT([$ruby_extdir])

  AC_MSG_CHECKING([where to install Ruby scripts])
  AC_CACHE_VAL([tomoe_cv_ruby_sitedir],
                 [tomoe_cv_ruby_sitedir="$rbconfig_sitelibdir"])
  AC_ARG_WITH([ruby-libdir],
                AC_HELP_STRING([--with-ruby-libdir=LIBDIR],
                               [install Ruby scripts for bindings in LIBDIR
                                (default is same as ruby's one)]),
                [tomoe_ruby_libdir="$withval"],
                [tomoe_ruby_libdir="$tomoe_cv_ruby_sitedir"])
  ruby_libdir="$tomoe_ruby_libdir"
  AC_MSG_RESULT([$ruby_libdir])

  AC_SUBST(ruby_extdir)
  AC_SUBST(ruby_libdir)
fi

AM_CONDITIONAL([WITH_RUBY], [test "$ruby_available" = "yes"])

dnl **************************************************************
dnl Configure for modules.
dnl **************************************************************

moduledir="${libdir}/\$(PACKAGE)/module"
AC_SUBST(moduledir)

dnl **************************************************************
dnl Configure for recognizer modules.
dnl **************************************************************

recognizer_moduledir="${moduledir}/recognizer"
AC_SUBST(recognizer_moduledir)

dnl **************************************************************
dnl Configure for dictionary modules.
dnl **************************************************************

dict_moduledir="${moduledir}/dict"
AC_SUBST(dict_moduledir)

dnl **************************************************************
dnl Configure for Unihan dictionary.
dnl **************************************************************

use_unihan=yes
AC_ARG_ENABLE(unihan,
              [  --disable-unihan         disable Unihan detabase],
              [use_unihan=$enableval],
	      [use_unihan=$enableval])
AM_CONDITIONAL([WITH_UNIHAN], [test "$use_unihan" = "yes"])

AC_PATH_PROG(UNZIP, unzip, unzip-not-found)

dnl **************************************************************
dnl Configure for Subverion dictionary.
dnl **************************************************************

PKG_CHECK_MODULES(APR, apr-1, [use_svn=yes], [use_svn=no])

svn_includes="/usr/local/include /usr/include"
AC_ARG_WITH(svn-include,
            [  --with-svn-include=DIR   Use the given path to the subversion headers.],
            [if test "$withval" != "yes" -a "$withval" != ""; then
               svn_includes=$withval
             fi])
AC_MSG_CHECKING([for Subversion headers])
svn_include=""
for value in $svn_includes ; do
    if test -f $value/subversion-1/svn_types.h ; then
        svn_include=$value
        break
    fi
done
if test "x$svn_include" != "x" ; then
    AC_MSG_RESULT([$svn_include])
else
    AC_MSG_RESULT([not found])
    use_svn="no"
fi
SVN_CFLAGS="\$(APR_CFLAGS) -I$svn_include/subversion-1"

svn_libs="/usr/local/lib /usr/lib"
AC_ARG_WITH(svn-lib,
            [  --with-svn-lib=DIR  Use the given path to the subversion libraries.],
            [if test "$withval" != "yes" -a "$withval" != ""; then
               SVN_LIBS=$withval
             fi])
AC_MSG_CHECKING([for Subversion libraries])
svn_lib=""
for value in $svn_libs ; do
  if ls $value/libsvn_client-1.* >/dev/null 2>&1; then
    svn_lib=$value
    break
  fi
done
if test "x$svn_lib" != "x" ; then
    AC_MSG_RESULT([$svn_lib])
else
    AC_MSG_RESULT([not found])
    use_svn="no"
fi
SVN_LIBS="\$(APR_LIBS) -L$svn_lib -lsvn_client-1 -lsvn_subr-1"

AC_SUBST(SVN_CFLAGS)
AC_SUBST(SVN_LIBS)

AM_CONDITIONAL([WITH_SVN], [test "$use_svn" = "yes"])

dnl **************************************************************
dnl Configure for MySQL dictionary.
dnl **************************************************************

AC_PATH_PROG(MYSQL_CONFIG, mysql_config, mysql_config-not-found)

if test "x$MYSQL_CONFIG" != "xmysql_config-not-found"; then
  enable_mysql=yes
  MYSQL_CFLAGS=`$MYSQL_CONFIG --cflags`
  MYSQL_LIBS=`$MYSQL_CONFIG --libs`
fi

AC_SUBST(MYSQL_CFLAGS)
AC_SUBST(MYSQL_LIBS)

AM_CONDITIONAL([WITH_MYSQL], [test "x$enable_mysql" = "xyes"])

dnl **************************************************************
dnl Configure for Ruby dictionary.
dnl **************************************************************
AC_ARG_ENABLE(dict_ruby, [  --enable-dict-ruby
			  Enable Ruby based dictionary module])
AM_CONDITIONAL(ENABLE_DICT_RUBY, test x"$enable_dict_ruby" = "xyes")


dnl **************************************************************
dnl Configure for TOMOE.
dnl **************************************************************

TOMOE_CFLAGS="$TOMOE_CFLAGS \$(GLIB_CFLAGS)"
TOMOE_CFLAGS="$TOMOE_CFLAGS -DCONFDIR=\\\"\"\$(confdir)\"\\\""
TOMOE_CFLAGS="$TOMOE_CFLAGS -DDATADIR=\\\"\"\$(datadir)\"\\\""
TOMOE_CFLAGS="$TOMOE_CFLAGS -DDICT_DATADIR=\\\"\"\$(dict_datadir)\"\\\""
TOMOE_CFLAGS="$TOMOE_CFLAGS -DRECOGNIZER_DATADIR=\\\"\"\$(recognizer_datadir)\"\\\""
TOMOE_CFLAGS="$TOMOE_CFLAGS -DDICT_MODULEDIR=\\\"\"\$(dict_moduledir)\"\\\""
TOMOE_CFLAGS="$TOMOE_CFLAGS -DRECOGNIZER_MODULEDIR=\\\"\"\$(recognizer_moduledir)\"\\\""
TOMOE_CFLAGS="$TOMOE_CFLAGS -I\$(top_srcdir)/lib"
AC_SUBST(TOMOE_CFLAGS)

TOMOE_LIBS='$(GLIB_LIBS)'
AC_SUBST(TOMOE_LIBS)

AC_CONFIG_FILES([
Makefile
lib/Makefile
module/Makefile
module/dict/Makefile
module/recognizer/Makefile
data/Makefile
ext/Makefile
ext/ruby/Makefile
test/Makefile
test/data/Makefile
benchmark/Makefile
doc/Makefile
doc/reference/Makefile
doc/reference/version.xml
tomoe.pc
])

AC_OUTPUT
